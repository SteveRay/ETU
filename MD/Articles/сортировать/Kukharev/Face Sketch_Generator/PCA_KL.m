    
       function [A_KLT,Lambda,M_COV]=PCA_KL(D,p);
     
%  Кухарев Г.А., Щеголева Н.Л., 2006 
 
%  Прогрмма PCA_KL.m 
%  Вычисление матриц ковариации M_COV, матриц 
%  преобразования Карунена-Лоэва A_KLT и 
%  собственных значений Lambda на основе метода PCA/KLT
%  при условии, когда размер DIM > KL=K*L;
%  Используемые собственные подпрограммы: НЕТ
%  Используемые встроенные подпрограммы-функции: 
%                  eig, sort, diag, sum.      
%  ИДЕНТИФИКАТОРЫ:
%  D      -  матрица исходных данных размера DIM на KL , где 
%  p      - размерность вектора признаков,
%  KL     - общее число образов;
%  p      –  количество наибольших собственных чисел:
%                "p" должно быть меньше "DIM";
%  A_KLT  –  матрица преобразования Карунена-Лоэва (KLT);
%  Lambda –  собственные числа для  матрицы ковариации M_COV;
%  M_COV    –  матрица ковариации;                     
%  v1       –  собственные векторы для  матрицы M_COV.
%-----------------------------------------------------------
%    Программа написана на основе методов, изложенных 
%    в монографии Кухарев Г.А., Щеголева Н.Л. “Системы 
%    распознавания человека по изображению лица”/ 
%    Издательство СПбГЭТУ (ЛЭТИ), СПб, 2006, 176 с.

%%%----------------------------
% Вычисление матрицы ковариации
              [DIM,KL]=size(D);
              M_COV=(D'*D);  %%без нормирования
              % M_COV=(D'*D)/(DIM*KL);  %% для нормирования
% Вычисление собственных чисел и соответствующих им   векторов    
              [W2,Lambda]=eig(M_COV);save EigenVector W2 Lambda ;
               Lambda=diag(Lambda);
                 [a,ind1]=sort(-Lambda); a=-a; Lambda=a;
                  %[Lambda,ind1]=sort(Lambda,'descend');
                    W2=W2(:,ind1); 
                    W2_inv=W2';I2=W2*W2_inv;
 % Формирование результата
                    V1=diag(1./sqrt(Lambda))*(D*W2)'; % нормирование
                   % save RES V1  Lambda  D W2;
                    %v1=(D*W2)'; %  без нормирования
                    Lambda=Lambda(1:p);   Lambda=Lambda'; 
                    A_KLT=V1(1:p,:);
                     
